spring:
  application:
    name: dating-app
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://localhost:27017/datingApp}?retryWrites=true&w=majority&readPreference=primaryPreferred&maxPoolSize=100&minPoolSize=10&maxIdleTimeMS=60000&waitQueueTimeoutMS=120000&connectTimeoutMS=5000&socketTimeoutMS=5000&serverSelectionTimeoutMS=30000
      database: ${MONGO_DATABASE:datingApp}
      auto-index-creation: true
      
    # Redis Configuration
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:0}
      connect-timeout: 5000ms
      timeout: 5000ms
      client-type: lettuce
      lettuce:
        pool:
          min-idle: 5
          max-idle: 10
          max-active: 50
          max-wait: 5000ms

  # Web configuration
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
    log-request-details: true
    
  web:
    resources:
      add-mappings: true
    
  # Jackson configuration
  jackson:
    default-property-inclusion: non-null
    serialization:
      write-dates-as-timestamps: false
      write-durations-as-timestamps: false
      write-date-timestamps-as-nanoseconds: false
    deserialization:
      fail-on-unknown-properties: true
    parser:
      allow-unquoted-field-names: true
    generator:
      write-numbers-as-strings: false

  # Validation messages
  messages:
    basename: messages
    encoding: UTF-8
    cache-duration: 1h

# Actuator endpoints configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
  health:
    db:
      enabled: true
    mongo:
      enabled: true
    redis:
      enabled: true
  metrics:
    enable:
      http:
        server:
          requests: true

# SpringDoc is disabled as we're using OpenAPI Generator

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  tomcat:
    connection-timeout: 10000  # Connection timeout in milliseconds

# Logging Configuration
logging:
  level:
    root: INFO
    '[org.springframework]': INFO
    '[org.springframework.web]': INFO
    '[org.springframework.boot]': INFO
    '[org.springframework.data]': INFO
    '[learn.ai.dating]': DEBUG
    '[org.springframework.data.mongodb]': WARN
    '[org.mongodb.driver]': WARN
    '[reactor.netty]': WARN
    '[org.springframework.validation]': DEBUG
    '[org.springframework.web.servlet.mvc.method.annotation]': TRACE
    '[org.springframework.data.mongodb.core.MongoTemplate]': DEBUG
    '[org.springframework.data.redis.core.RedisTemplate]': DEBUG
    
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30
    total-size-cap: 1GB

# Application specific properties
app:
  version: 1.0.0
  build:
    version: ${build.version:unknown}
    time: ${build.time:unknown}
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    max-age: 3600
